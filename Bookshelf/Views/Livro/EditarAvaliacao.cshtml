@model Bookshelf.Models.ViewModels.AvaliacaoViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Editar Avaliação";
}

<main class="bg-gray-100 min-h-screen py-10">
    <div class="container mx-auto max-w-lg">
        <div class="mb-6">
            <button onclick="history.back()" class="bg-gray-200 hover:bg-gray-300 text-gray-700 px-4 py-2 rounded-md shadow-sm text-sm font-medium">
                <i class="fas fa-arrow-left mr-2"></i> Voltar
            </button>
        </div>
        <h1 class="text-2xl font-bold text-blue-900 mb-6">Editar Avaliação: @ViewBag.LivroTitulo</h1>

        <!-- Exibe a capa do livro -->
        <div class="flex justify-center mb-6">
            <img src="@ViewBag.LivroCapaUrl" alt="Capa do Livro" class="w-32 h-48 object-cover rounded-md shadow-md">
        </div>

        <form asp-action="EditarAvaliacao" method="post">
            @Html.AntiForgeryToken()

            <!-- Avaliação com estrelas -->
            <div class="mb-4">
                <label class="block text-sm font-medium text-gray-700 mb-2">Sua Avaliação</label>
                <div id="star-rating" class="flex space-x-1 text-yellow-500 text-2xl cursor-pointer">
                    @for (int i = 1; i <= 5; i++)
                    {
                        <i class="fas fa-star @(Model.Nota >= i ? "text-yellow-500" : "text-gray-300")" data-value="@i"></i>
                    }
                </div>
                <input type="hidden" id="nota" name="Nota" value="@Model.Nota" />
            </div>

            <!-- Status do livro -->
            <div class="mb-4">
                <label for="status" class="block text-sm font-medium text-gray-700">Status</label>
                <select id="status" name="Status" class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500">
                    <option value="Quero Ler" @(Model.Status == "Quero Ler" ? "selected" : "")>Quero Ler</option>
                    <option value="Lendo" @(Model.Status == "Lendo" ? "selected" : "")>Lendo</option>
                    <option value="Lido" @(Model.Status == "Lido" ? "selected" : "")>Lido</option>
                </select>
            </div>

            <!-- Comentário -->
            <div class="mb-4">
                <label for="comentario" class="block text-sm font-medium text-gray-700">Comentário</label>
                <textarea id="comentario" name="Comentario" rows="4" class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500">@Model.Comentario</textarea>
            </div>

            <!-- Botão de salvar -->
            <div class="flex justify-end">
                <button type="submit" class="bg-gradient-to-r from-green-400 to-green-600 text-white px-6 py-2 rounded-md shadow-md hover:from-green-500 hover:to-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">
                    <i class="fas fa-save mr-2"></i> Salvar Alterações
                </button>
            </div>
        </form>
    </div>
</main>

<script>
    // Script para manipular a avaliação com estrelas
    document.querySelectorAll('#star-rating i').forEach(star => {
        star.addEventListener('click', function () {
            const rating = this.getAttribute('data-value');
            document.getElementById('nota').value = rating;

            // Atualiza as estrelas visualmente
            document.querySelectorAll('#star-rating i').forEach(s => {
                if (s.getAttribute('data-value') <= rating) {
                    s.classList.remove('text-gray-300');
                    s.classList.add('text-yellow-500');
                } else {
                    s.classList.remove('text-yellow-500');
                    s.classList.add('text-gray-300');
                }
            });
        });
    });
</script>